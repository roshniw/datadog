{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.1.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar dragService_1 = require(\"../../dragAndDrop/dragService\");\n\nvar context_1 = require(\"../../context/context\");\n\nfunction Movable(target) {\n  var MixinClass =\n  /** @class */\n  function (_super) {\n    __extends(MixinClass, _super);\n\n    function MixinClass() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.movable = false;\n      _this.isMoving = false;\n      return _this;\n    }\n\n    MixinClass.prototype.postConstruct = function () {\n      _super.prototype.postConstruct.call(this);\n\n      var movable = this.config.movable;\n\n      if (movable) {\n        this.setMovable(movable);\n      }\n    };\n\n    MixinClass.prototype.onMoveStart = function (e) {\n      this.isMoving = true;\n      this.updateDragStartPosition(e.clientX, e.clientY);\n    };\n\n    MixinClass.prototype.onMove = function (e) {\n      if (!this.isMoving) {\n        return;\n      }\n\n      var _a = this.position,\n          x = _a.x,\n          y = _a.y;\n\n      var _b = this.calculateMouseMovement({\n        e: e,\n        isTop: true,\n        anywhereWithin: true,\n        topBuffer: this.getHeight() - this.getBodyHeight()\n      }),\n          movementX = _b.movementX,\n          movementY = _b.movementY;\n\n      this.offsetElement(x + movementX, y + movementY);\n      this.updateDragStartPosition(e.clientX, e.clientY);\n    };\n\n    MixinClass.prototype.onMoveEnd = function () {\n      this.isMoving = false;\n    };\n\n    MixinClass.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.setMovable(false);\n    };\n\n    MixinClass.prototype.setMovable = function (movable) {\n      if (movable !== this.movable) {\n        this.movable = movable;\n        var params = this.moveElementDragListener || {\n          eElement: this.moveElement,\n          onDragStart: this.onMoveStart.bind(this),\n          onDragging: this.onMove.bind(this),\n          onDragStop: this.onMoveEnd.bind(this)\n        };\n\n        if (movable) {\n          this.dragService.addDragSource(params);\n          this.moveElementDragListener = params;\n        } else {\n          this.dragService.removeDragSource(params);\n          this.moveElementDragListener = undefined;\n        }\n      }\n    };\n\n    __decorate([context_1.Autowired('dragService'), __metadata(\"design:type\", dragService_1.DragService)], MixinClass.prototype, \"dragService\", void 0);\n\n    return MixinClass;\n  }(target);\n\n  return MixinClass;\n}\n\nexports.Movable = Movable;","map":null,"metadata":{},"sourceType":"script"}