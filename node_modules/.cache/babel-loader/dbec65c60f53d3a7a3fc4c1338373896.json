{"ast":null,"code":"/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.1.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\n\nvar context_1 = require(\"../../../context/context\");\n\nvar userComponentFactory_1 = require(\"../../../components/framework/userComponentFactory\");\n\nvar utils_1 = require(\"../../../utils\");\n\nvar dateCompWrapper_1 = require(\"./dateCompWrapper\");\n\nvar simpleFilter_1 = require(\"../simpleFilter\");\n\nvar scalerFilter_1 = require(\"../scalerFilter\");\n\nvar DateFilter =\n/** @class */\nfunction (_super) {\n  __extends(DateFilter, _super);\n\n  function DateFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DateFilter.prototype.mapRangeFromModel = function (filterModel) {\n    // unlike the other filters, we do two things here:\n    // 1) allow for different attribute names (same as done for other filters) (eg the 'from' and 'to'\n    //    are in different locations in Date and Number filter models)\n    // 2) convert the type (cos Date filter uses Dates, however model is 'string')\n    //\n    // NOTE: The conversion of string to date also removes the timezone - ie when user picks\n    //       a date form the UI, it will have timezone info in it. This is lost when creating\n    //       the model. Then when we recreate the date again here, it's without timezone.\n    return {\n      from: utils_1._.parseYyyyMmDdToDate(filterModel.dateFrom, \"-\"),\n      to: utils_1._.parseYyyyMmDdToDate(filterModel.dateTo, \"-\")\n    };\n  };\n\n  DateFilter.prototype.setValueFromFloatingFilter = function (value) {\n    if (value != null) {\n      var dateFrom = utils_1._.parseYyyyMmDdToDate(value, \"-\");\n\n      this.dateCompFrom1.setDate(dateFrom);\n    } else {\n      this.dateCompFrom1.setDate(null);\n    }\n\n    this.dateCompTo1.setDate(null);\n    this.dateCompFrom2.setDate(null);\n    this.dateCompTo2.setDate(null);\n  };\n\n  DateFilter.prototype.setConditionIntoUi = function (model, position) {\n    var positionOne = position === simpleFilter_1.ConditionPosition.One;\n    var dateFromString = model ? model.dateFrom : null;\n    var dateToString = model ? model.dateTo : null;\n\n    var dateFrom = utils_1._.parseYyyyMmDdToDate(dateFromString, \"-\");\n\n    var dateTo = utils_1._.parseYyyyMmDdToDate(dateToString, \"-\");\n\n    var compFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n    var compTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n    compFrom.setDate(dateFrom);\n    compTo.setDate(dateTo);\n  };\n\n  DateFilter.prototype.resetUiToDefaults = function () {\n    _super.prototype.resetUiToDefaults.call(this);\n\n    this.dateCompTo1.setDate(null);\n    this.dateCompTo2.setDate(null);\n    this.dateCompFrom1.setDate(null);\n    this.dateCompFrom2.setDate(null);\n  };\n\n  DateFilter.prototype.comparator = function () {\n    return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);\n  };\n\n  DateFilter.prototype.defaultComparator = function (filterDate, cellValue) {\n    //The default comparator assumes that the cellValue is a date\n    var cellAsDate = cellValue;\n\n    if (cellAsDate < filterDate) {\n      return -1;\n    }\n\n    if (cellAsDate > filterDate) {\n      return 1;\n    }\n\n    return cellValue != null ? 0 : -1;\n  };\n\n  DateFilter.prototype.setParams = function (params) {\n    _super.prototype.setParams.call(this, params);\n\n    this.dateFilterParams = params;\n    this.createDateComponents();\n  };\n\n  DateFilter.prototype.createDateComponents = function () {\n    var _this = this; // params to pass to all four date comps\n\n\n    var dateComponentParams = {\n      onDateChanged: function () {\n        return _this.onUiChanged();\n      },\n      filterParams: this.dateFilterParams\n    };\n    this.dateCompFrom1 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelFrom1);\n    this.dateCompFrom2 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelFrom2);\n    this.dateCompTo1 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelTo1);\n    this.dateCompTo2 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelTo2);\n    this.addDestroyFunc(function () {\n      _this.dateCompFrom1.destroy();\n\n      _this.dateCompFrom2.destroy();\n\n      _this.dateCompTo1.destroy();\n\n      _this.dateCompTo2.destroy();\n    });\n  };\n\n  DateFilter.prototype.getDefaultFilterOptions = function () {\n    return DateFilter.DEFAULT_FILTER_OPTIONS;\n  };\n\n  DateFilter.prototype.createValueTemplate = function (position) {\n    var positionOne = position === simpleFilter_1.ConditionPosition.One;\n    var pos = positionOne ? '1' : '2';\n    return \"<div class=\\\"ag-filter-body\\\" ref=\\\"eCondition\" + pos + \"Body\\\">\\n                    <div class=\\\"ag-filter-date-from\\\" ref=\\\"ePanelFrom\" + pos + \"\\\">\\n                    </div>\\n                    <div class=\\\"ag-filter-date-to\\\" ref=\\\"ePanelTo\" + pos + \"\\\"\\\">\\n                    </div>\\n                </div>\";\n  };\n\n  DateFilter.prototype.isConditionUiComplete = function (position) {\n    var positionOne = position === simpleFilter_1.ConditionPosition.One;\n    var option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n    var compFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n    var compTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n    var valueFrom = compFrom.getDate();\n    var valueTo = compTo.getDate();\n\n    if (option === simpleFilter_1.SimpleFilter.EMPTY) {\n      return false;\n    }\n\n    if (this.doesFilterHaveHiddenInput(option)) {\n      return true;\n    }\n\n    if (option === simpleFilter_1.SimpleFilter.IN_RANGE) {\n      return valueFrom != null && valueTo != null;\n    } else {\n      return valueFrom != null;\n    }\n  };\n\n  DateFilter.prototype.areSimpleModelsEqual = function (aSimple, bSimple) {\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\n  }; // needed for creating filter model\n\n\n  DateFilter.prototype.getFilterType = function () {\n    return DateFilter.FILTER_TYPE;\n  };\n\n  DateFilter.prototype.createCondition = function (position) {\n    var positionOne = position === simpleFilter_1.ConditionPosition.One;\n    var type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n    var dateCompTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n    var dateCompFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n    return {\n      dateTo: utils_1._.serializeDateToYyyyMmDd(dateCompTo.getDate(), \"-\"),\n      dateFrom: utils_1._.serializeDateToYyyyMmDd(dateCompFrom.getDate(), \"-\"),\n      type: type,\n      filterType: DateFilter.FILTER_TYPE\n    };\n  };\n\n  DateFilter.prototype.updateUiVisibility = function () {\n    _super.prototype.updateUiVisibility.call(this);\n\n    var showFrom1 = this.showValueFrom(this.getCondition1Type());\n\n    utils_1._.setVisible(this.ePanelFrom1, showFrom1);\n\n    var showTo1 = this.showValueTo(this.getCondition1Type());\n\n    utils_1._.setVisible(this.ePanelTo1, showTo1);\n\n    var showFrom2 = this.showValueFrom(this.getCondition2Type());\n\n    utils_1._.setVisible(this.ePanelFrom2, showFrom2);\n\n    var showTo2 = this.showValueTo(this.getCondition2Type());\n\n    utils_1._.setVisible(this.ePanelTo2, showTo2);\n  };\n\n  DateFilter.FILTER_TYPE = 'date';\n  DateFilter.DEFAULT_FILTER_OPTIONS = [scalerFilter_1.ScalerFilter.EQUALS, scalerFilter_1.ScalerFilter.GREATER_THAN, scalerFilter_1.ScalerFilter.LESS_THAN, scalerFilter_1.ScalerFilter.NOT_EQUAL, scalerFilter_1.ScalerFilter.IN_RANGE];\n\n  __decorate([componentAnnotations_1.RefSelector('ePanelFrom1'), __metadata(\"design:type\", HTMLElement)], DateFilter.prototype, \"ePanelFrom1\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('ePanelFrom2'), __metadata(\"design:type\", HTMLElement)], DateFilter.prototype, \"ePanelFrom2\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('ePanelTo1'), __metadata(\"design:type\", HTMLElement)], DateFilter.prototype, \"ePanelTo1\", void 0);\n\n  __decorate([componentAnnotations_1.RefSelector('ePanelTo2'), __metadata(\"design:type\", HTMLElement)], DateFilter.prototype, \"ePanelTo2\", void 0);\n\n  __decorate([context_1.Autowired('userComponentFactory'), __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)], DateFilter.prototype, \"userComponentFactory\", void 0);\n\n  return DateFilter;\n}(scalerFilter_1.ScalerFilter);\n\nexports.DateFilter = DateFilter;","map":null,"metadata":{},"sourceType":"script"}