{"ast":null,"code":"// ag-grid-react v21.1.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar AgGrid = require(\"ag-grid-community\");\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar baseReactComponent_1 = require(\"./baseReactComponent\");\n\nvar ReactComponent =\n/** @class */\nfunction (_super) {\n  __extends(ReactComponent, _super);\n\n  function ReactComponent(reactComponent, parentComponent) {\n    var _this = _super.call(this) || this;\n\n    _this.portal = null;\n    _this.componentWrappingElement = 'div';\n    _this.unwrapComponent = true;\n    _this.reactComponent = reactComponent;\n    _this.parentComponent = parentComponent;\n    _this.orphans = [];\n    _this.statelessComponent = ReactComponent.isStateless(_this.reactComponent);\n    return _this;\n  }\n\n  ReactComponent.prototype.getFrameworkComponentInstance = function () {\n    return this.componentInstance;\n  };\n\n  ReactComponent.prototype.isStatelesComponent = function () {\n    return this.statelessComponent;\n  };\n\n  ReactComponent.prototype.getReactComponentName = function () {\n    return this.reactComponent.name;\n  };\n\n  ReactComponent.prototype.init = function (params) {\n    var _this = this;\n\n    return new ag_grid_community_1.Promise(function (resolve) {\n      _this.unwrapComponent = false;\n      _this.eParentElement = _this.createParentElement(params);\n\n      _this.createReactComponent(params, resolve);\n    });\n  };\n\n  ReactComponent.prototype.getGui = function () {\n    if (this.unwrapComponent) {\n      var fragment = document.createDocumentFragment();\n\n      if (this.orphans.length > 0) {\n        for (var _i = 0, _a = this.orphans; _i < _a.length; _i++) {\n          var orphan = _a[_i];\n          fragment.appendChild(orphan);\n        }\n      } else {\n        while (this.eParentElement.firstChild) {\n          this.orphans.push(this.eParentElement.firstChild);\n          fragment.appendChild(this.eParentElement.firstChild);\n        }\n      }\n\n      return fragment;\n    } else {\n      return this.eParentElement;\n    }\n  };\n\n  ReactComponent.prototype.destroy = function () {\n    if (this.unwrapComponent) {\n      for (var _i = 0, _a = this.orphans; _i < _a.length; _i++) {\n        var orphan = _a[_i];\n        this.eParentElement.appendChild(orphan);\n      }\n    }\n\n    return this.parentComponent.destroyPortal(this.portal);\n  };\n\n  ReactComponent.prototype.createReactComponent = function (params, resolve) {\n    var _this = this;\n\n    if (!this.statelessComponent) {\n      // grab hold of the actual instance created - we use a react ref for this as there is no other mechanism to\n      // retrieve the created instance from either createPortal or render\n      params.ref = function (element) {\n        _this.componentInstance = element;\n      };\n    }\n\n    var ReactComponent = React.createElement(this.reactComponent, params);\n    var portal = ReactDOM.createPortal(ReactComponent, this.eParentElement);\n    this.portal = portal;\n    this.parentComponent.mountReactPortal(portal, this, resolve);\n  };\n\n  ReactComponent.prototype.createParentElement = function (params) {\n    var eParentElement = document.createElement(this.parentComponent.props.componentWrappingElement || 'div');\n\n    if (!this.unwrapComponent) {\n      AgGrid.Utils.addCssClass(eParentElement, 'ag-react-container'); // so user can have access to the react container, to add css class or style\n\n      params.reactContainer = eParentElement;\n    }\n\n    return eParentElement;\n  };\n\n  ReactComponent.prototype.statelessComponentRendered = function () {\n    return this.eParentElement.childElementCount > 0;\n  };\n\n  ReactComponent.isStateless = function (Component) {\n    return typeof Component === 'function' && !(Component.prototype && Component.prototype.isReactComponent);\n  };\n\n  return ReactComponent;\n}(baseReactComponent_1.BaseReactComponent);\n\nexports.ReactComponent = ReactComponent;","map":null,"metadata":{},"sourceType":"script"}